{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,QAmBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBhB,EAAAkB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAEhEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBhB,EAAAkB,OAAOG,QAAQ,sBAAoBN,QAAeC,MAAU,G,CAnClEd,EAAKoB,iBAAiB,UAGtB,SAAkBC,GAChBA,EAAEC,iBACF,IAAIR,EAAQO,EAAEE,OAAO,GAAGC,cACxBC,QAAQC,IAAIZ,GACZ,MAAMa,EAAON,EAAEE,OAAO,GAAGC,cACnBI,EAASP,EAAEE,OAAO,GAAGC,cAE3B,IAAK,IAAIX,EAAW,EAAGA,GAAYe,EAAQf,IACzCV,EAAcU,EAAUC,GACxBA,GAASa,EACTF,QAAQC,IAAIZ,GAEdO,EAAEQ,cAAcC,O,IAdlBL,QAAQC,IAAI1B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\nconsole.log(form);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = e.target[0].valueAsNumber;\n  console.log(delay);\n  const step = e.target[1].valueAsNumber;\n  const amount = e.target[2].valueAsNumber;\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay);\n    delay += step;\n    console.log(delay);\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notify","success","catch","failure","addEventListener","e","preventDefault","target","valueAsNumber","console","log","step","amount","currentTarget","reset"],"version":3,"file":"03-promises.46b009a0.js.map"}